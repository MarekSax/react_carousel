{"version":3,"sources":["components/Carousel/Carousel.tsx","App.tsx","index.tsx"],"names":["Carousel","images","step","frameSize","itemWidth","animationDuration","infinite","useState","imgPosition","setImgPosition","lastImgPosition","length","carouselStyle","width","transition","carouselItemStyle","transform","isNextDisabled","isPrevDisabled","useEffect","className","style","map","image","index","src","alt","type","onClick","previousImgPosition","disabled","App","state","handleInputChange","event","target","name","value","setState","previousData","this","htmlFor","id","min","max","onChange","React","Component","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.30d171e0.chunk.js","sourcesContent":["import { useEffect, useState } from 'react';\nimport './Carousel.scss';\nimport { State } from '../../types';\n\nexport const Carousel = ({\n  images, step, frameSize, itemWidth, animationDuration, infinite,\n}: State) => {\n  const [imgPosition, setImgPosition] = useState(0);\n  const lastImgPosition = images.length - frameSize;\n\n  const carouselStyle = {\n    width: `${itemWidth * frameSize}px`,\n    transition: `${animationDuration}ms steps(5, end)`,\n  };\n\n  const carouselItemStyle = {\n    transform: `translateX(${-(imgPosition * itemWidth)}px)`,\n    transition: `${animationDuration}ms steps(6, jump-both)`,\n  };\n\n  const isNextDisabled = imgPosition === lastImgPosition && !infinite;\n  const isPrevDisabled = imgPosition === 0 && !infinite;\n\n  const handleNext = () => {\n    if (imgPosition < lastImgPosition) {\n      setImgPosition(previousImgPosition => (\n        previousImgPosition + step <= lastImgPosition\n          ? previousImgPosition + step\n          : lastImgPosition\n      ));\n    } else {\n      setImgPosition(0);\n    }\n  };\n\n  const handlePrev = () => {\n    if (imgPosition > 0) {\n      setImgPosition(previousImgPosition => (\n        previousImgPosition - step >= 0\n          ? previousImgPosition - step\n          : 0\n      ));\n    } else {\n      setImgPosition(lastImgPosition);\n    }\n  };\n\n  useEffect(() => setImgPosition(0), [frameSize]);\n\n  return (\n    <div className=\"Carousel\" style={carouselStyle}>\n      <ul className=\"Carousel__list\">\n        {images.map((image, index) => (\n          <li key={image} style={carouselItemStyle}>\n            <img\n              src={image}\n              width={itemWidth}\n              alt={`${index + 1}`}\n            />\n          </li>\n        ))}\n      </ul>\n      <div className=\"Carousel__wrapper\">\n        <button\n          className=\"Carousel__button\"\n          type=\"button\"\n          onClick={handlePrev}\n          disabled={isPrevDisabled}\n        >\n          Prev\n        </button>\n        <button\n          className=\"Carousel__button\"\n          data-cy=\"next\"\n          type=\"button\"\n          onClick={handleNext}\n          disabled={isNextDisabled}\n        >\n          Next\n        </button>\n      </div>\n    </div>\n  );\n};\n","import React, { ChangeEvent } from 'react';\nimport './App.scss';\nimport { State } from './types';\nimport { Carousel } from './components/Carousel';\n\nclass App extends React.Component<{}, State> {\n  state = {\n    images: [\n      './img/1.png',\n      './img/2.png',\n      './img/3.png',\n      './img/4.png',\n      './img/5.png',\n      './img/6.png',\n      './img/7.png',\n      './img/8.png',\n      './img/9.png',\n      './img/10.png',\n    ],\n    step: 3,\n    frameSize: 3,\n    itemWidth: 130,\n    animationDuration: 1000,\n    infinite: false,\n  };\n\n  handleInputChange = (event: ChangeEvent<HTMLInputElement>) => {\n    const { name, value } = event.target;\n\n    if (name === 'infinite') {\n      this.setState((previousData) => ({ infinite: !previousData.infinite }));\n\n      return;\n    }\n\n    this.setState((previousData) => ({ ...previousData, [name]: +value }));\n  };\n\n  render() {\n    const {\n      images,\n      step,\n      frameSize,\n      itemWidth,\n      animationDuration,\n      infinite,\n    } = this.state;\n\n    return (\n      <div className=\"App\">\n        {/* eslint-disable-next-line */}\n        <h1 data-cy=\"title\" className=\"App__title\">8-bit Carousel with {images.length} images</h1>\n        <div className=\"App__wrapper\">\n          <label className=\"App__label\" htmlFor=\"itemId\">\n            Item width:\n            <input\n              className=\"App__input\"\n              type=\"number\"\n              id=\"itemId\"\n              name=\"itemWidth\"\n              min=\"50\"\n              max=\"200\"\n              step=\"5\"\n              value={itemWidth}\n              onChange={this.handleInputChange}\n            />\n          </label>\n          <label className=\"App__label\" htmlFor=\"frameId\">\n            Frame size:\n            <input\n              className=\"App__input\"\n              type=\"number\"\n              id=\"frameId\"\n              name=\"frameSize\"\n              min=\"1\"\n              max=\"9\"\n              value={frameSize}\n              onChange={this.handleInputChange}\n            />\n          </label>\n          <label className=\"App__label\" htmlFor=\"stepId\">\n            Step:\n            <input\n              className=\"App__input\"\n              type=\"number\"\n              id=\"stepId\"\n              name=\"step\"\n              min=\"1\"\n              max={images.length}\n              value={step}\n              onChange={this.handleInputChange}\n            />\n          </label>\n          <label className=\"App__label\" htmlFor=\"animationDuration\">\n            Animation duration (ms):\n            <input\n              className=\"App__input\"\n              type=\"number\"\n              id=\"animationDuration\"\n              name=\"animationDuration\"\n              min=\"50\"\n              step=\"50\"\n              value={animationDuration}\n              onChange={this.handleInputChange}\n            />\n          </label>\n          <label className=\"App__label\" htmlFor=\"infinite\">\n            Infinite:\n            <input\n              className=\"App__checkbox\"\n              type=\"checkbox\"\n              id=\"infinite\"\n              name=\"infinite\"\n              onChange={this.handleInputChange}\n            />\n          </label>\n        </div>\n\n        <Carousel\n          images={images}\n          step={step}\n          frameSize={frameSize}\n          itemWidth={itemWidth}\n          animationDuration={animationDuration}\n          infinite={infinite}\n        />\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}